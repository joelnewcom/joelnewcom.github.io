# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - none

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'apis/poi/poi.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
  - job: DotNetBuildAndTest
    steps:
      - task: DotNetCoreCLI@2
        inputs:
          command: 'restore'
          projects: 'apis/poi/*.sln'
        displayName: 'dotnet restore'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: 'apis/poi/*.sln'
          arguments: '--configuration $(buildConfiguration)'
        displayName: 'dotnet build $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'test'
          projects: 'apis/poi/*.sln'
          arguments: '--filter "FullyQualifiedName~UnitTest" --logger "trx;LogFileName=UnitTestResults.trx" --results-directory ./TestResults'
        displayName: 'dotnet test'

      - task: CreatePRCommentTask@1
        condition: and(failed(), eq(variables['Build.Reason'], 'PullRequest'))
        inputs:
          AuthType: 'system'
          Comment: |
            ### Unit Test `failure`
            <details>
            <summary>Pipeline details</summary>
            
            Pipeline name: `$(Build.DefinitionName)`
            Action: `$(Build.Reason)`
            Job: `$(System.JobName)`
            PR: [$(System.PullRequest.PullRequestId)]($(System.PullRequest.SourceRepositoryURI)/pullrequest/$(System.PullRequest.PullRequestId))
            </details>
            
            Test details: [Run #$(Build.BuildId)]($(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=ms.vss-test-web.build-test-results-tab)
            Pusher: @<$(Build.RequestedForId)>

      - task: CreateWorkItem@1
        condition: and(failed(), eq(variables['Build.Reason'], 'Manual'))
        inputs:
          workItemType: 'Bug'
          title: 'Fix your PR'
          assignedTo: '$(Build.RequestedForId)'
          associate: true

  - job: GitLeaks
    pool:
      vmImage: 'ubuntu-latest'
    dependsOn: []
    steps:
      - task: Gitleaks@2
        inputs:
          scanlocation: '$(Build.SourcesDirectory)'
          configtype: 'custom'
          configfile: '$(Build.SourcesDirectory)/gitleaks.toml'
          redact: false
          reportformat: 'sarif'
