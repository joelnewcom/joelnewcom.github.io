---
---

# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - none

resources:
  - repo: self

variables:
  - group: openhack
    # Container registry service connection established during pipeline creation
  - name: dockerRegistryServiceConnection
    value: '2646a76f-0097-48bc-98e0-ef75db4de4b0'
  - name:  imageRepository
    value: 'devopsoh/api-poi'
  - name: containerRegistry
    value: 'devopsoh21969cr.azurecr.io'
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/apis/poi/web/Dockerfile'
    # <Azure Container Registry URI>/<ACR repository name>:<Revision Number>.
  - name: tag
    value: '$(Build.BuildId)'
    # Agent VM image name
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
  - stage: DeployToStaging
    displayName: Deploy to Staging
    jobs:
      - job: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'AzureServiceConnection'
              appName: 'devopsoh21969poi'
              deployToSlotOrASE: true
              resourceGroupName: 'devopsoh21969rg'
              slotName: 'staging'
              containers: '$(containerRegistry)/$(imageRepository):$(build.buildId)'
          - task: AzureAppServiceSettings@1
            inputs:
              azureSubscription: 'AzureServiceConnection'
              appName: 'devopsoh21969poi'
              resourceGroupName: 'devopsoh21969rg'
              slotName: 'staging'
              appSettings: |
                [
                  {
                    "name": "APP_VERSION",
                    "value": "$(build.buildId)",
                    "slotSetting": false
                  }
                ]
      - job: InvokeRestAPI
        displayName: Invoke REST API
        dependsOn: Deploy
        pool: server
        steps:
          - task: InvokeRESTAPI@1
            inputs:
              connectionType: 'connectedServiceName'
              serviceConnection: 'POIStagingAPI'
              method: 'GET'
              headers:
              urlSuffix: '/api/healthcheck/poi'
              waitForCompletion: 'false'
              successCriteria: 'eq(root[''status''], ''Healthy'')'
      - job: HotSwap
        displayName: HotSwap
        dependsOn: InvokeRestAPI
        steps:
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'AzureServiceConnection'
              Action: 'Swap Slots'
              WebAppName: 'devopsoh21969poi'
              ResourceGroupName: 'devopsoh21969rg'
              SourceSlot: 'staging'

